{"ref":"8dddf6a7-8eb9-4464-a05e-0820b32ca225","content":"{\"version\":1,\"machineId\":\"4e17e87f-f258-432a-a237-9d99d8e31949\",\"content\":\"{\\\"php.json\\\":\\\"{\\\\n\\\\t// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n\\\\n\\\\t\\\\\\\"Constructor\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"php-con\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"public function __construct()\\\\\\\\n{\\\\\\\\n}\\\\\\\\n\\\\\\\"\\\\n\\\\t\\\\t]\\\\n\\\\t},\\\\n\\\\n\\\\t\\\\\\\"Public function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"php-pub\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"public function ${name}()\\\\\\\\n{\\\\\\\\n}\\\\\\\\n\\\\\\\"\\\\n\\\\t\\\\t]\\\\n\\\\t},\\\\n\\\\n\\\\t\\\\\\\"Private function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"php-pri\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"private function ${name}()\\\\\\\\n{\\\\\\\\n}\\\\\\\\n\\\\\\\"\\\\n\\\\t\\\\t]\\\\n\\\\t},\\\\n\\\\n\\\\t\\\\\\\"For loop\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"php-for\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"for (${index} = 0; ${index} < ${length}; ${index}++) {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"For Loop\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t\\\\\\\"Dump Class and Function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"dm\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": \\\\\\\"dump(__CLASS__.\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\".__FUNCTION__.\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\".__LINE__);\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"Dump Class and Function to Log File\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"dml\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": \\\\\\\"dumpLog(__CLASS__.\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\".__FUNCTION__.\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\".__LINE__);\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"Exit\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"ex\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": \\\\\\\"exit(__CLASS__.\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\".__FUNCTION__.\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\".__LINE__);\\\\\\\"\\\\n\\\\t},\\\\n}\\\",\\\"elixir.json\\\":\\\"{\\\\n\\\\t// Place your snippets for elixir here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n\\\\n\\\\t\\\\\\\"Print current module and function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"IO.puts \\\\\\\\\\\\\\\"**** #{inspect __ENV__.file}:#{inspect __ENV__.line}\\\\\\\\\\\\\\\"\\\\\\\"\\\\n\\\\t\\\\t]\\\\n\\\\t}\\\\n}\\\"}\"}"}